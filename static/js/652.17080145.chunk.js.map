{"version":3,"file":"static/js/652.17080145.chunk.js","mappings":";kMACA,EAA6B,+BAA7B,EAAyE,+BAAzE,EAAyH,mCAAzH,EAA6K,mCAA7K,EAA8N,gCAA9N,EAA2Q,+BAA3Q,EAAwT,yCCuCxT,EAnCmB,SAAHA,GAAoB,IAAdC,EAAMD,EAANC,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAC5BN,EAAOO,OAAS,GACfJ,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAeC,SAC3BN,EAAOQ,KAAI,SAACC,GAAK,OAChBN,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAmBC,UAChCI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHP,UAAWC,EACXO,GAAE,WAAAC,OAAaJ,EAAMK,IACrBC,MAAOd,EAASK,SAAA,EAEhBH,EAAAA,EAAAA,KAAA,OACEa,IAAG,kCAAAH,OAAoCJ,EAAMQ,aAC7CC,IAAKT,EAAMU,MACXf,UAAWC,KAEbF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAeC,SAAEG,EAAMU,YAXFV,EAAMK,GAazC,OAITX,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAgBC,SAAC,sBAIvC,oHCjCA,EAAuB,wBAAvB,EAAwD,0BAAxD,EAA0F,kCCwC1F,EArCkB,WAChB,IAAAc,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA4BC,EAAAA,EAAAA,MAAnBC,GAAoCL,EAAAA,EAAAA,GAAAG,EAAA,GAArB,GAiBxB,OACEhB,EAAAA,EAAAA,MAAA,QAAMN,UAAWC,EAAUwB,SAPR,SAACC,GALI,IAACC,EAMzBD,EAAEE,iBAJFJ,EAD4B,MADHG,EAOPP,GANe,CAAEO,KAAAA,GAAS,CAAC,GAO7CN,EAAS,GACX,EAGoDnB,SAAA,EAChDH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACX4B,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZZ,MAAOA,EACPa,SAxBe,SAAHtC,GAA+B,IAAfyB,EAAKzB,EAAfuC,OAAUd,MAChCC,EAASD,EACX,KAwBIrB,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAY4B,KAAK,SAAQ3B,SAAC,aAKnD,iCCtCAiC,EAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAzB,KAAA,EAAA0B,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAC,EAAAxB,GAAA,OAAAkB,OAAAI,eAAAC,EAAAC,EAAA,CAAAxB,MAAAA,EAAAmC,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,EAAA,KAAAU,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAC,EAAAxB,GAAA,OAAAuB,EAAAC,GAAAxB,CAAA,WAAAuC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAA9C,MAAAkD,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAA5C,KAAA,SAAA4C,IAAAD,EAAAE,KAAA/B,EAAA8B,GAAA,OAAAf,GAAA,OAAA7B,KAAA,QAAA4C,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAG,EAAAkC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAAtC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAW,GAAA,SAAAM,EAAA7C,GAAA,0BAAA8C,SAAA,SAAAC,GAAAhC,EAAAf,EAAA+C,GAAA,SAAAb,GAAA,YAAAc,QAAAD,EAAAb,EAAA,gBAAAe,EAAAtB,EAAAuB,GAAA,SAAAC,EAAAJ,EAAAb,EAAAkB,EAAAC,GAAA,IAAAC,EAAAtB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAoB,EAAAhE,KAAA,KAAAiE,EAAAD,EAAApB,IAAArD,EAAA0E,EAAA1E,MAAA,OAAAA,GAAA,iBAAAA,GAAAoB,EAAAkC,KAAAtD,EAAA,WAAAqE,EAAAE,QAAAvE,EAAA2E,SAAAC,MAAA,SAAA5E,GAAAsE,EAAA,OAAAtE,EAAAuE,EAAAC,EAAA,aAAAlC,GAAAgC,EAAA,QAAAhC,EAAAiC,EAAAC,EAAA,IAAAH,EAAAE,QAAAvE,GAAA4E,MAAA,SAAAC,GAAAH,EAAA1E,MAAA6E,EAAAN,EAAAG,EAAA,aAAAI,GAAA,OAAAR,EAAA,QAAAQ,EAAAP,EAAAC,EAAA,IAAAA,EAAAC,EAAApB,IAAA,KAAA0B,EAAAzD,EAAA,gBAAAtB,MAAA,SAAAkE,EAAAb,GAAA,SAAA2B,IAAA,WAAAX,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAb,EAAAkB,EAAAC,EAAA,WAAAO,EAAAA,EAAAA,EAAAH,KAAAI,EAAAA,GAAAA,GAAA,aAAA9B,EAAAV,EAAAE,EAAAM,GAAA,IAAAzD,EAAA,iCAAA2E,EAAAb,GAAA,iBAAA9D,EAAA,UAAA0F,MAAA,iDAAA1F,EAAA,cAAA2E,EAAA,MAAAb,EAAA,OAAA6B,GAAA,KAAAlC,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA,KAAA8B,EAAAnC,EAAAmC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAnC,GAAA,GAAAoC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,CAAA,cAAApC,EAAAkB,OAAAlB,EAAAsC,KAAAtC,EAAAuC,MAAAvC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAA3E,EAAA,MAAAA,EAAA,YAAAyD,EAAAK,IAAAL,EAAAwC,kBAAAxC,EAAAK,IAAA,gBAAAL,EAAAkB,QAAAlB,EAAAyC,OAAA,SAAAzC,EAAAK,KAAA9D,EAAA,gBAAAkF,EAAAtB,EAAAX,EAAAE,EAAAM,GAAA,cAAAyB,EAAAhE,KAAA,IAAAlB,EAAAyD,EAAA0C,KAAA,6BAAAjB,EAAApB,MAAAE,EAAA,gBAAAvD,MAAAyE,EAAApB,IAAAqC,KAAA1C,EAAA0C,KAAA,WAAAjB,EAAAhE,OAAAlB,EAAA,YAAAyD,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAA,YAAAgC,EAAAF,EAAAnC,GAAA,IAAA2C,EAAA3C,EAAAkB,OAAAA,EAAAiB,EAAAtD,SAAA8D,GAAA,QAAAC,IAAA1B,EAAA,OAAAlB,EAAAmC,SAAA,eAAAQ,GAAAR,EAAAtD,SAAAgE,SAAA7C,EAAAkB,OAAA,SAAAlB,EAAAK,SAAAuC,EAAAP,EAAAF,EAAAnC,GAAA,UAAAA,EAAAkB,SAAA,WAAAyB,IAAA3C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAyC,UAAA,oCAAAH,EAAA,aAAApC,EAAA,IAAAkB,EAAAtB,EAAAe,EAAAiB,EAAAtD,SAAAmB,EAAAK,KAAA,aAAAoB,EAAAhE,KAAA,OAAAuC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAAL,EAAAmC,SAAA,KAAA5B,EAAA,IAAAwC,EAAAtB,EAAApB,IAAA,OAAA0C,EAAAA,EAAAL,MAAA1C,EAAAmC,EAAAa,YAAAD,EAAA/F,MAAAgD,EAAAiD,KAAAd,EAAAe,QAAA,WAAAlD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAuC,GAAA5C,EAAAmC,SAAA,KAAA5B,GAAAwC,GAAA/C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAyC,UAAA,oCAAA9C,EAAAmC,SAAA,KAAA5B,EAAA,UAAA4C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA5B,EAAA4B,EAAAQ,YAAA,GAAApC,EAAAhE,KAAA,gBAAAgE,EAAApB,IAAAgD,EAAAQ,WAAApC,CAAA,UAAAxB,EAAAN,GAAA,KAAA+D,WAAA,EAAAJ,OAAA,SAAA3D,EAAAsB,QAAAkC,EAAA,WAAAW,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAnF,GAAA,GAAAoF,EAAA,OAAAA,EAAA1D,KAAAyD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAhI,QAAA,KAAAmI,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAhI,QAAA,GAAAqC,EAAAkC,KAAAyD,EAAAG,GAAA,OAAAjB,EAAAjG,MAAA+G,EAAAG,GAAAjB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAjG,WAAA4F,EAAAK,EAAAP,MAAA,EAAAO,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAf,EAAA,UAAAA,IAAA,OAAAlF,WAAA4F,EAAAF,MAAA,UAAAlC,EAAArC,UAAAsC,EAAAnC,EAAAyC,EAAA,eAAA/D,MAAAyD,EAAArB,cAAA,IAAAd,EAAAmC,EAAA,eAAAzD,MAAAwD,EAAApB,cAAA,IAAAoB,EAAA2D,YAAAjF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAoG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAE,YAAA,QAAAD,IAAAA,IAAA9D,GAAA,uBAAA8D,EAAAH,aAAAG,EAAA/G,MAAA,EAAAS,EAAAwG,KAAA,SAAAH,GAAA,OAAAnG,OAAAuG,eAAAvG,OAAAuG,eAAAJ,EAAA5D,IAAA4D,EAAAK,UAAAjE,EAAAvB,EAAAmF,EAAArF,EAAA,sBAAAqF,EAAAlG,UAAAD,OAAA6B,OAAAgB,GAAAsD,CAAA,EAAArG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAsB,QAAAtB,EAAA,EAAAW,EAAAI,EAAAjD,WAAAe,EAAAkC,EAAAjD,UAAAW,GAAA,0BAAAd,EAAAoD,cAAAA,EAAApD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,IAAAA,EAAAwD,SAAA,IAAAC,EAAA,IAAA1D,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAArD,EAAAoG,oBAAA3E,GAAAqF,EAAAA,EAAA7B,OAAArB,MAAA,SAAAF,GAAA,OAAAA,EAAAgB,KAAAhB,EAAA1E,MAAA8H,EAAA7B,MAAA,KAAAjC,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAApB,KAAAnF,GAAA,OAAAuG,EAAAG,UAAA,SAAAjC,IAAA,KAAA8B,EAAAhJ,QAAA,KAAAyC,EAAAuG,EAAAI,MAAA,GAAA3G,KAAAyG,EAAA,OAAAhC,EAAAjG,MAAAwB,EAAAyE,EAAAP,MAAA,EAAAO,CAAA,QAAAA,EAAAP,MAAA,EAAAO,CAAA,GAAAjF,EAAA8C,OAAAA,EAAAb,EAAA9B,UAAA,CAAAoG,YAAAtE,EAAA6D,MAAA,SAAAsB,GAAA,QAAAC,KAAA,OAAApC,KAAA,OAAAX,KAAA,KAAAC,WAAAK,EAAA,KAAAF,MAAA,OAAAP,SAAA,UAAAjB,OAAA,YAAAb,SAAAuC,EAAA,KAAAc,WAAAzC,QAAA2C,IAAAwB,EAAA,QAAA7H,KAAA,WAAAA,EAAA+H,OAAA,IAAAlH,EAAAkC,KAAA,KAAA/C,KAAA0G,OAAA1G,EAAAgI,MAAA,WAAAhI,QAAAqF,EAAA,EAAA4C,KAAA,gBAAA9C,MAAA,MAAA+C,EAAA,KAAA/B,WAAA,GAAAG,WAAA,aAAA4B,EAAAhI,KAAA,MAAAgI,EAAApF,IAAA,YAAAqF,IAAA,EAAAlD,kBAAA,SAAAmD,GAAA,QAAAjD,KAAA,MAAAiD,EAAA,IAAA3F,EAAA,cAAA4F,EAAAC,EAAAC,GAAA,OAAArE,EAAAhE,KAAA,QAAAgE,EAAApB,IAAAsF,EAAA3F,EAAAiD,KAAA4C,EAAAC,IAAA9F,EAAAkB,OAAA,OAAAlB,EAAAK,SAAAuC,KAAAkD,CAAA,SAAA5B,EAAA,KAAAR,WAAA3H,OAAA,EAAAmI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAzC,EAAA4B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA,KAAA+B,KAAA,KAAAU,EAAA3H,EAAAkC,KAAA+C,EAAA,YAAA2C,EAAA5H,EAAAkC,KAAA+C,EAAA,iBAAA0C,GAAAC,EAAA,SAAAX,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,WAAA8B,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,WAAA,SAAAuC,GAAA,QAAAV,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAA/D,MAAA,kDAAAoD,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,WAAA,KAAAf,OAAA,SAAAhF,EAAA4C,GAAA,QAAA6D,EAAA,KAAAR,WAAA3H,OAAA,EAAAmI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAA+B,MAAAjH,EAAAkC,KAAA+C,EAAA,oBAAAgC,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAAxI,GAAA,aAAAA,IAAAwI,EAAA3C,QAAAjD,GAAAA,GAAA4F,EAAAzC,aAAAyC,EAAA,UAAAxE,EAAAwE,EAAAA,EAAApC,WAAA,UAAApC,EAAAhE,KAAAA,EAAAgE,EAAApB,IAAAA,EAAA4F,GAAA,KAAA/E,OAAA,YAAA+B,KAAAgD,EAAAzC,WAAAjD,GAAA,KAAA2F,SAAAzE,EAAA,EAAAyE,SAAA,SAAAzE,EAAAgC,GAAA,aAAAhC,EAAAhE,KAAA,MAAAgE,EAAApB,IAAA,gBAAAoB,EAAAhE,MAAA,aAAAgE,EAAAhE,KAAA,KAAAwF,KAAAxB,EAAApB,IAAA,WAAAoB,EAAAhE,MAAA,KAAAiI,KAAA,KAAArF,IAAAoB,EAAApB,IAAA,KAAAa,OAAA,cAAA+B,KAAA,kBAAAxB,EAAAhE,MAAAgG,IAAA,KAAAR,KAAAQ,GAAAlD,CAAA,EAAA4F,OAAA,SAAA3C,GAAA,QAAAU,EAAA,KAAAR,WAAA3H,OAAA,EAAAmI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAA0C,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA9C,CAAA,GAAA6F,MAAA,SAAA9C,GAAA,QAAAY,EAAA,KAAAR,WAAA3H,OAAA,EAAAmI,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA7B,EAAA4B,EAAAQ,WAAA,aAAApC,EAAAhE,KAAA,KAAA4I,EAAA5E,EAAApB,IAAAuD,EAAAP,EAAA,QAAAgD,CAAA,YAAApE,MAAA,0BAAAqE,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,YAAAf,SAAA,CAAAtD,SAAAiC,EAAAiD,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAAhC,SAAA,KAAAb,SAAAuC,GAAArC,CAAA,GAAAvC,CAAA,CAMA,IAwCA,EAxCe,WAAO,IAADuI,EAEnB3J,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C4J,EAAY1J,EAAA,GAAE2J,EAAe3J,EAAA,GACpCI,GAAuBC,EAAAA,EAAAA,MAEjBuJ,EAAgD,QAA3BH,GAFaxJ,EAAAA,EAAAA,GAAAG,EAAA,GAArB,GAEwByJ,IAAI,eAAO,IAAAJ,EAAAA,EAAI,GAkB1D,OAhBAK,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAS,eAAAtL,GAAAuL,EAAAA,EAAAA,GAAA/I,IAAAyG,MAAG,SAAAuC,IAAA,IAAAC,EAAA,OAAAjJ,IAAAwB,MAAA,SAAA0H,GAAA,cAAAA,EAAA5B,KAAA4B,EAAAhE,MAAA,cAAAgE,EAAA5B,KAAA,EAAA4B,EAAAhE,KAAA,GAESiE,EAAAA,EAAAA,IAAgBR,GAAuB,KAAD,EAAvDM,EAAQC,EAAA3E,KACdmE,EAAgBO,EAASG,SAASF,EAAAhE,KAAA,gBAAAgE,EAAA5B,KAAA,EAAA4B,EAAAG,GAAAH,EAAA,SAElCI,QAAQvF,MAAKmF,EAAAG,IAAQ,yBAAAH,EAAAzB,OAAA,GAAAuB,EAAA,kBAExB,kBAPc,OAAAxL,EAAA+L,MAAA,KAAAC,UAAA,KAQfV,GAVA,CAWF,GAAG,CAACH,KAGF/K,EAAAA,EAAAA,KAAA,QAAAG,UACII,EAAAA,EAAAA,MAACsL,EAAAA,EAAS,CAAA1L,SAAA,EACRH,EAAAA,EAAAA,KAAC8L,EAAS,IACTjB,GAAgBA,EAAazK,OAAS,GACrCJ,EAAAA,EAAAA,KAAC+L,EAAAA,EAAU,CAAClM,OAAQgL,IAClBA,GAAwC,IAAxBA,EAAazK,QAC/BJ,EAAAA,EAAAA,KAAA,KAAAG,SAAG,yCAEH,OAMZ","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"moviesGrid\":\"MoviesList_moviesGrid__FjeEa\",\"moviesListItem\":\"MoviesList_moviesListItem__OFqms\",\"moviesListLink\":\"MoviesList_moviesListLink__8Ci-i\",\"moviePoster\":\"MoviesList_moviePoster__feY6F\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\",\"noFoundText\":\"MoviesList_noFoundText__owQfl\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div className={css.moviesList}>\n      {movies.length > 0 ? (\n        <ul className={css.moviesGrid}>\n          {movies.map((movie) => (\n            <li className={css.moviesListItem} key={movie.id}>\n              <Link\n                className={css.moviesListLink}\n                to={`/movies/${movie.id}`}\n                state={location}\n              >\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n                  alt={movie.title}\n                  className={css.moviePoster}\n                />\n                <h3 className={css.movieTitle}>{movie.title}</h3>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={css.noFoundText}>No movies found.</p>\n      )}\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"button\":\"SearchBar_button__T7RTc\",\"input\":\"SearchBar_input__bIy50\"};","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport css from './SearchBar.module.css';\n\nconst SearchBar = () => {\n  const [value, setValue] = useState('');\n  const [, setSearchParams] = useSearchParams();\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const updateQueryString = (name) => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateQueryString(value);\n    setValue('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.input}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search films\"\n        value={value}\n        onChange={handleChange}\n      />\n      <button className={css.button} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Container from 'components/Container/Container';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { getSearchMovies } from '../services/MoviesApi';\n\nconst Movies = () => {\n\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [searchParams] = useSearchParams();\n\n  const httpGetParamMovieName = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    if (!httpGetParamMovieName) {\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        const response = await getSearchMovies(httpGetParamMovieName);\n        setSearchMovies(response.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, [httpGetParamMovieName]);\n\n  return (\n    <main>\n        <Container>\n          <SearchBar></SearchBar>\n          {searchMovies && searchMovies.length > 0 ? (\n            <MoviesList movies={searchMovies} />\n          ) : searchMovies && searchMovies.length === 0 ? (\n            <p>Sorry, we have not found any movies.</p>\n          ) : (\n            ''\n          )}\n        </Container>\n\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","movies","location","useLocation","_jsx","className","css","children","length","map","movie","_jsxs","Link","to","concat","id","state","src","poster_path","alt","title","_useState","useState","_useState2","_slicedToArray","value","setValue","_useSearchParams","useSearchParams","setSearchParams","onSubmit","e","name","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_searchParams$get","searchMovies","setSearchMovies","httpGetParamMovieName","get","useEffect","fetchData","_asyncToGenerator","_callee","response","_context","getSearchMovies","results","t0","console","apply","arguments","Container","SearchBar","MoviesList"],"sourceRoot":""}